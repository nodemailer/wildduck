{
    "openapiVersion": "3.0.0",
    "info": {
        "title": "WildDuck API",
        "description": "WildDuck API docs",
        "contact": {
            "url": "https://github.com/nodemailer/wildduck"
        }
    },
    "servers": [{ "url": "https://api.wildduck.email" }],
    "tags": [
        { "name": "Addresses" },
        { "name": "ApplicationPasswords" },
        {
            "name": "Archive",
            "description":
                "Archive includes all deleted messages. Once messages are old enough then these are permanenetly deleted from the archive as well. Until then you can restore the deleted messages."
        },
        {
            "name": "Audit",
            "description":
                "Auditing allows to monitor an email account. All existing, deleted and new emails are copied to the auditing system. See also https://github.com/nodemailer/wildduck-audit-manager"
        },
        { "name": "Authentication" },
        { "name": "Autoreplies" },
        {
            "name": "Certs",
            "description":
                "WildDuck allows to register TLS certificates to be used with SNI connections. These certificates are used by IMAP, POP3, API and SMTP servers when a SNI capable client establishes a TLS connection. This does not apply for MX servers."
        },
        {
            "name": "DKIM",
            "description":
                "Whenever an email is sent WildDuck checks if there is a DKIM key registered for the domain name of the sender address and uses it to sign the message."
        },
        {
            "name": "DomainAccess",
            "description": "Add sender domain names to allowlist (messages are all accepted) or blocklist (messages are sent to Spam folder)"
        },
        { "name": "DomainAliases" },
        { "name": "Filters" },
        { "name": "Mailboxes" },
        { "name": "Messages" },
        { "name": "Settings" },
        {
            "name": "Storage",
            "description":
                "Storage allows easier attachment handling when composing Draft messages. Instead of uploading the attachmnent with every draft update, you store the attachment to the Storage and then link stored file for the Draft."
        },
        { "name": "Submission" },
        { "name": "TwoFactorAuth" },
        { "name": "Users" },
        { "name": "Webhooks" }
    ],
    "components": {
        "securitySchemes": {
            "AccessTokenAuth": {
                "name": "X-Access-Token",
                "type": "apiKey",
                "in": "header",
                "description": "If authentication is enabled in the WildDuck configuration, you will need to supply an access token in the `X-Access-Token` header.\n```json\n{\n    \"X-Access-Token\": \"59fc66a03e54454869460e45\"\n}\n```\n"
            }
        }
    },
    "security": [{ "AccessTokenAuth": [] }],
    "docsPath": "/docs/api/openapidocs.json"
}